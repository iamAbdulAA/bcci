# Enum for status
enum EventStatus {
  PENDING
  CONFIRMED
}

# Event type
type Event {
  id: ID!
  title: String!
  date: String!
  time: String!
  status: EventStatus!
}

# Input type for creating an event
input CreateEventInput {
  
  title: String!
  date: String!
  time: String!
  status: EventStatus
}

# Input type for updating an event
input UpdateEventInput {
  title: String
  date: String
  time: String
  status: EventStatus
}

type createEventResponse {
  id: ID
  user: ID
  goal: Goal
  success: Boolean!
  message: String!
}
type updateEventResponse {
  user: ID
  goal: Goal
  success: Boolean!
  message: String!
}

type deleteEventResponse {
  deletedGoal: Goal
  success: Boolean!
  message: String!
}

# Queries
type Query {
  getEvents: [Event!]!
  getEvent(id: ID!): Event
}

# Mutations
type Mutation {
  createEvent(input: CreateEventInput!): createEventResponse!
  updateEvent(id: ID!, input: UpdateEventInput!): updateEventResponse!
  deleteEvent(id: ID!): deleteEventResponse!
}
