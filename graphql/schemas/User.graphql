type User {
  id: ID!
  firstName: String!
  surname: String!
  otherNames: String!
  email: String!
  phone: String
  password: String!
  roles: [String!]!
  country: String
  state: String
  city: String
  cluster: Cluster
  cell: Cell
  bookmarkedContent: [ID]
  contributionHistory: [Contribution]
  spiritualGoals: [String]
}
type Query {
  hello: String!
}

type Mutation {
  createUser(user: UserInput!): User!
}

type Mutation {
  loginUser(user: LoginUserInput!): LoginResponse!
}

type LoginResponse {
  user: User
  token: String
  error: String
}

input UserInput {
  firstName: String!
  surname: String!
  otherNames: String!
  email: String!
  phone: String
  password: String!
  roles: [String!]!
  country: String
  state: String
  city: String
  clusterId: ID
  cellId: ID
  bookmarkedContent: [ID]
  spiritualGoals: [String]
}

input LoginUserInput {
  email: String!
  password: String!
}
