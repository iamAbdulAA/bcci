type User {
  id: ID!
  firstName: String!
  surname: String!
  otherNames: String!
  email: String!
  phone: String
  password: String!
  roles: [String!]!
  country: String
  state: String
  city: String
  cluster: Cluster
  cell: Cell
  bookmarkedContent: [ID]
  contributionHistory: [Contribution]
  spiritualGoals: [String]
}

type LoginResponse {
  message: String
}

input UserInput {
  firstName: String!
  surname: String!
  otherNames: String!
  email: String!
  phone: String
  password: String!
  roles: [String!]!
  country: String
  state: String
  city: String
  clusterId: ID
  cellId: ID
  bookmarkedContent: [ID]
  spiritualGoals: [String]
}
input updateUserInput {
  firstName: String
  surname: String
  otherNames: String
  email: String
  phone: String
  password: String
  roles: [String]
  country: String
  state: String
  city: String
  clusterId: ID
  cellId: ID
  bookmarkedContent: [ID]
  spiritualGoals: [String]
}

input LoginUserInput {
  email: String!
  password: String!
}

# ! -----------------Queries------------------------------

type Query {
  users: [User!]!
  user(id: String): User
}

#! ------------------mutations --------------------------

type Mutation {
  deleteUser(id: String): String!
  updateUser(user: updateUserInput): User!
  createUser(user: UserInput!): User!
  loginUser(user: LoginUserInput!): LoginResponse!
}
